<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>openapi-generator-for-spring-test</artifactId>
    <name>OpenAPI Generator for Spring Boot :: Test</name>

    <parent>
        <artifactId>openapi-generator-for-spring-parent</artifactId>
        <groupId>de.qaware.tools.openapi-generator-for-spring</groupId>
        <version>1.0.1-SNAPSHOT</version>
    </parent>

    <properties>
        <!-- This module only has tests to execute, so we don't need to release it -->
        <maven.install.skip>true</maven.install.skip>
        <maven.deploy.skip>true</maven.deploy.skip>
    </properties>

    <dependencies>
        <dependency>
            <groupId>de.qaware.tools.openapi-generator-for-spring</groupId>
            <artifactId>openapi-generator-for-spring-starter</artifactId>
            <scope>test</scope>
        </dependency>
        <!--
        Explicitly include both WebFlux AND WebMVC, as test cases cover both variants.
        Note that applications using this library usually run either WebMVC or WebFlux.
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <!--
                    This unpacking jars here serves two purposes:
                    1) Make shaded classes/resources available also for IntelliJ in target/ folder by unpacking the shaded jar
                       `mvn package -DskipTests` must be run at least once to get it working in IntelliJ
                    2) Make all project classes available for JaCoCo report goal. Otherwise, JaCoCo complains about missing classes
                       and won't generate a correct report
                    -->
                    <execution>
                        <id>unpack-deps</id>
                        <phase>package</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/classes</outputDirectory>
                            <includeGroupIds>${project.groupId}</includeGroupIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
            Manually generate a merged JaCoCo report once the int tests have run
            The goal "report-aggregate" from the JaCoCo plugin needs explicit references in this project
            to any module generating test coverage (so just using -starter would not be enough)
            -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>merge-results</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>merge</goal>
                        </goals>
                        <configuration>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.basedir}/..</directory>
                                    <includes>
                                        <include>**/target/jacoco.exec</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                            <destFile>target/site/jacoco/aggregate.exec</destFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>report-merge</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>target/site/jacoco/aggregate.exec</dataFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Disable some more unnecessary plugin executions by binding them to phase "none",
                 as we're just focusing on tests here -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-resources</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-jar</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>update-license-header</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
